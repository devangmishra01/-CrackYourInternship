6. Best time to buy and sell stock
~code~
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int mini = prices[0], maxi = 0;
        for(int i=0;i<prices.size();i++){
            mini = min(mini,prices[i]);
            maxi = max(maxi,prices[i]-mini);
        }
        return maxi;
    }
};

7.Chocolate  Distribution problem
~Code~
 sort(a.begin(),a.end());
        long long int diff=INT_MAX;
        for(int i=0;i<n;i++){
            if(i+m-1>=n){
                break;
            }
            long long int sum=(a[i+m-1]-a[i]);
            diff= min(diff,sum);
            
        }
        return diff;
        
 8. Two sum
 ~code~ 
 class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> output;
        for(int i=0;i<nums.size()-1;i++){
            for(int j=i+1;j<nums.size();j++){
                if(nums[i]+nums[j]==target){
                    output.push_back(i);
                    output.push_back(j);
                    return output;
                }
            }
        }return output;
    }
};

9.Best time to buy ans sell stock II
        
